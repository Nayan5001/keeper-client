{"ast":null,"code":"/*jslint onevar: true, undef: true, nomen: true, eqeqeq: true, plusplus: true, bitwise: true, regexp: true, newcap: true, immed: true */\n(function () {\n  \"use strict\";\n\n  var global = Function('return this')(),\n      classes = \"Boolean Number String Function Array Date RegExp Object\".split(\" \"),\n      i,\n      name,\n      class2type = {};\n\n  for (i in classes) {\n    if (classes.hasOwnProperty(i)) {\n      name = classes[i];\n      class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n  }\n\n  function typeOf(obj) {\n    return null === obj || undefined === obj ? String(obj) : class2type[Object.prototype.toString.call(obj)] || \"object\";\n  }\n\n  function isEmpty(o) {\n    var i, v;\n\n    if (typeOf(o) === 'object') {\n      for (i in o) {\n        // fails jslint\n        v = o[i];\n\n        if (v !== undefined && typeOf(v) !== 'function') {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  if (!String.prototype.entityify) {\n    String.prototype.entityify = function () {\n      return this.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    };\n  }\n\n  if (!String.prototype.quote) {\n    String.prototype.quote = function () {\n      var c,\n          i,\n          l = this.length,\n          o = '\"';\n\n      for (i = 0; i < l; i += 1) {\n        c = this.charAt(i);\n\n        if (c >= ' ') {\n          if (c === '\\\\' || c === '\"') {\n            o += '\\\\';\n          }\n\n          o += c;\n        } else {\n          switch (c) {\n            case '\\b':\n              o += '\\\\b';\n              break;\n\n            case '\\f':\n              o += '\\\\f';\n              break;\n\n            case '\\n':\n              o += '\\\\n';\n              break;\n\n            case '\\r':\n              o += '\\\\r';\n              break;\n\n            case '\\t':\n              o += '\\\\t';\n              break;\n\n            default:\n              c = c.charCodeAt();\n              o += \"\\\\u00\" + Math.floor(c / 16).toString(16) + (c % 16).toString(16);\n          }\n        }\n      }\n\n      return o + '\"';\n    };\n  }\n\n  if (!String.prototype.supplant) {\n    String.prototype.supplant = function (o) {\n      return this.replace(/{([^{}]*)}/g, function (a, b) {\n        var r = o[b];\n        return typeof r === 'string' || typeof r === 'number' ? r : a;\n      });\n    };\n  }\n\n  if (!String.prototype.trim) {\n    String.prototype.trim = function () {\n      return this.replace(/^\\s*(\\S*(?:\\s+\\S+)*)\\s*$/, \"$1\");\n    };\n  } // CommonJS / npm / Ender.JS\n\n\n  module.exports = {\n    typeOf: typeOf,\n    isEmpty: isEmpty\n  };\n  global.typeOf = global.typeOf || typeOf;\n  global.isEmpty = global.isEmpty || isEmpty;\n})();","map":null,"metadata":{},"sourceType":"script"}