{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\delln\\\\OneDrive\\\\Desktop\\\\Webd_projects\\\\Keeper\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\delln\\\\OneDrive\\\\Desktop\\\\Webd_projects\\\\Keeper\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,Component,useEffect}from\"react\";import Header from\"./Header\";import Footer from\"./Footer\";import Note from\"./Note\";import CreateArea from\"./CreateArea\";import axios from\"axios\";// import FormData from \"FormData\";\n// import * as mongoose from \"mongoose\";\nfunction App(){// const mongoose = require(\"mongoose\");\n// mongoose.connect(\"mongodb://localhost:27017/keeperdb\",{useNewUrlParser:true,useUnifiedTopology:true});\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];// const [idd,setid]=useState();\nuseEffect(function(){axios.get('http://localhost:3000/api').then(function(response){console.log(response.data);setNotes(response.data);});},[]);// var bodyFormData = new FormData();\nfunction addNote(newNote){console.log(newNote);axios.post('http://localhost:3000/apiadd',{newNote:newNote}).then(function(response){//handle success\nconsole.log(response);// setid(id+1);\n}).catch(function(response){//handle error\nconsole.log(response);});setNotes(function(prevNotes){return[].concat(_toConsumableArray(prevNotes),[newNote]);});// let id=0;\n// notes.forEach(()=>{\n//   id++;\n// });\n}function deleteNote(id){// axios.get('http://localhost:3000/getid').then((response)=>{\n//   console.log(response.data);\n//   setid(response.data);\n// });\naxios.post('http://localhost:3000/apidel',{id:id}).then(function(response){//handle success\nconsole.log(response);}).catch(function(response){//handle error\nconsole.log(response);});// axios({\n//   method: 'post',\n//   url: 'http://localhost:3000/api',\n//   data: {\n//     firstName: 'Finn',\n//     lastName: 'Williams'\n//   }\n// }).then((response) => {\n//   console.log(response);\n// }, (error) => {\n//   console.log(error);\n// });\nsetNotes(function(prevNotes){return prevNotes.filter(function(noteItem,index){return noteItem.id!==id;});});console.log(id);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(CreateArea,{onAdd:addNote}),notes.map(function(noteItem,index){return/*#__PURE__*/React.createElement(Note,{key:index,id:noteItem.id,title:noteItem.title,content:noteItem.content,onDelete:deleteNote});}),/*#__PURE__*/React.createElement(Footer,null));}export default App;","map":{"version":3,"sources":["C:/Users/delln/OneDrive/Desktop/Webd_projects/Keeper/Client/src/components/App.jsx"],"names":["React","useState","Component","useEffect","Header","Footer","Note","CreateArea","axios","App","notes","setNotes","get","then","response","console","log","data","addNote","newNote","post","catch","prevNotes","deleteNote","id","filter","noteItem","index","map","title","content"],"mappings":"oYAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAAyBC,SAAzB,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA;AACA,QAASC,CAAAA,GAAT,EAAe,CACX;AACA;AAFW,cAGeR,QAAQ,CAAC,EAAD,CAHvB,wCAGJS,KAHI,eAGGC,QAHH,eAIX;AAEAR,SAAS,CAAC,UAAI,CACZK,KAAK,CAACI,GAAN,CAAU,2BAAV,EAAuCC,IAAvC,CAA4C,SAACC,QAAD,CAAY,CACtDC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EACAN,QAAQ,CAACG,QAAQ,CAACG,IAAV,CAAR,CACD,CAHD,EAID,CALQ,CAKP,EALO,CAAT,CAOA;AACF,QAASC,CAAAA,OAAT,CAAiBC,OAAjB,CAA0B,CACxBJ,OAAO,CAACC,GAAR,CAAYG,OAAZ,EACAX,KAAK,CAACY,IAAN,CAAW,8BAAX,CAA0C,CAACD,OAAO,CAAPA,OAAD,CAA1C,EACCN,IADD,CACM,SAAUC,QAAV,CAAoB,CACxB;AACAC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACA;AACD,CALD,EAMCO,KAND,CAMO,SAAUP,QAAV,CAAoB,CACzB;AACAC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACD,CATD,EAUAH,QAAQ,CAAC,SAAAW,SAAS,CAAI,CACpB,mCAAWA,SAAX,GAAsBH,OAAtB,GACD,CAFO,CAAR,CAGA;AACA;AACA;AACA;AAGD,CAED,QAASI,CAAAA,UAAT,CAAoBC,EAApB,CAAwB,CAGtB;AACA;AACA;AACA;AACAhB,KAAK,CAACY,IAAN,CAAW,8BAAX,CAA0C,CAACI,EAAE,CAAFA,EAAD,CAA1C,EACGX,IADH,CACQ,SAAUC,QAAV,CAAoB,CACxB;AACAC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACD,CAJH,EAKGO,KALH,CAKS,SAAUP,QAAV,CAAoB,CACzB;AACAC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACD,CARH,EASE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,QAAQ,CAAC,SAAAW,SAAS,CAAI,CACpB,MAAOA,CAAAA,SAAS,CAACG,MAAV,CAAiB,SAACC,QAAD,CAAWC,KAAX,CAAqB,CAC3C,MAAOD,CAAAA,QAAQ,CAACF,EAAT,GAAgBA,EAAvB,CACD,CAFM,CAAP,CAID,CALO,CAAR,CAMAT,OAAO,CAACC,GAAR,CAAYQ,EAAZ,EACD,CACH,mBACE,4CACE,oBAAC,MAAD,MADF,cAEE,oBAAC,UAAD,EAAY,KAAK,CAAEN,OAAnB,EAFF,CAGGR,KAAK,CAACkB,GAAN,CAAU,SAACF,QAAD,CAAWC,KAAX,CAAqB,CAC9B,mBACE,oBAAC,IAAD,EACE,GAAG,CAAEA,KADP,CAEE,EAAE,CAAED,QAAQ,CAACF,EAFf,CAGE,KAAK,CAAEE,QAAQ,CAACG,KAHlB,CAIE,OAAO,CAAEH,QAAQ,CAACI,OAJpB,CAKE,QAAQ,CAAEP,UALZ,EADF,CASD,CAVA,CAHH,cAcE,oBAAC,MAAD,MAdF,CADF,CAkBD,CAED,cAAed,CAAAA,GAAf","sourcesContent":["import React, { useState,Component, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Note from \"./Note\";\r\nimport CreateArea from \"./CreateArea\";\r\nimport axios from \"axios\";\r\n// import FormData from \"FormData\";\r\n// import * as mongoose from \"mongoose\";\r\nfunction App() {\r\n    // const mongoose = require(\"mongoose\");\r\n    // mongoose.connect(\"mongodb://localhost:27017/keeperdb\",{useNewUrlParser:true,useUnifiedTopology:true});\r\n    const [notes, setNotes] = useState([]);\r\n    // const [idd,setid]=useState();\r\n    \r\n    useEffect(()=>{\r\n      axios.get('http://localhost:3000/api').then((response)=>{\r\n        console.log(response.data);\r\n        setNotes(response.data);\r\n      });\r\n    },[]);\r\n  \r\n    // var bodyFormData = new FormData();\r\n  function addNote(newNote) {\r\n    console.log(newNote);\r\n    axios.post('http://localhost:3000/apiadd',{newNote})\r\n    .then(function (response) {\r\n      //handle success\r\n      console.log(response);\r\n      // setid(id+1);\r\n    })\r\n    .catch(function (response) {\r\n      //handle error\r\n      console.log(response);\r\n    });\r\n    setNotes(prevNotes => {\r\n      return [...prevNotes, newNote];\r\n    });\r\n    // let id=0;\r\n    // notes.forEach(()=>{\r\n    //   id++;\r\n    // });\r\n    \r\n    \r\n  }\r\n\r\n  function deleteNote(id) {\r\n    \r\n   \r\n    // axios.get('http://localhost:3000/getid').then((response)=>{\r\n    //   console.log(response.data);\r\n    //   setid(response.data);\r\n    // });\r\n    axios.post('http://localhost:3000/apidel',{id})\r\n      .then(function (response) {\r\n        //handle success\r\n        console.log(response);\r\n      })\r\n      .catch(function (response) {\r\n        //handle error\r\n        console.log(response);\r\n      });\r\n      // axios({\r\n      //   method: 'post',\r\n      //   url: 'http://localhost:3000/api',\r\n      //   data: {\r\n      //     firstName: 'Finn',\r\n      //     lastName: 'Williams'\r\n      //   }\r\n      // }).then((response) => {\r\n      //   console.log(response);\r\n      // }, (error) => {\r\n      //   console.log(error);\r\n      // });\r\n      setNotes(prevNotes => {\r\n        return prevNotes.filter((noteItem, index) => {\r\n          return noteItem.id !== id;\r\n        });\r\n      \r\n      });\r\n      console.log(id);\r\n    }\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <CreateArea onAdd={addNote} />\r\n      {notes.map((noteItem, index) => {\r\n        return (\r\n          <Note\r\n            key={index}\r\n            id={noteItem.id}\r\n            title={noteItem.title}\r\n            content={noteItem.content}\r\n            onDelete={deleteNote}\r\n          />\r\n        );\r\n      })}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}